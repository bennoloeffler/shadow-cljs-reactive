{"version":3,"sources":["starter/calculator.cljs"],"mappings":";AAKA,AAAKA,AAAW,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AAGjB,AAAA,AAAMC;AAAN,AAAA,AAAA,AACgB,AAAA,AAAA,AAAAC,AAAWH;;AAG3B,AAAA,AAAMI;AAAN,AACE,AAAM,AAAA,AAAA,AAAAD,AAAeH;AAArB,AACE,AAAA,AAAA,AAACK,AAAML,AAAWM;;AAClB,AAAA,AAAA,AAACD,AAAML,AAAWM;;AAFpB;;;AAKF,AAAA,AAAMC,AAASC;AAAf,AACE,AAACJ;;AACD,AAAMK,AAAI,AAAA,AAAA,AAAAN,AAAWH;AACfU,AAAM,AAAI,AAAA,AAACC,AAAMF,AAAKD,AAAO,AAAKC,AAAID;AACtCI,AAAM,AAAA,AAACP,AAAML,AAAWM,AAAeI;AAF7C,AAAA;;AAKF,AAAA,AAAMG,AAAiBC,AAAGC,AAAEC;AAA5B,AACE,AAAK,AAAAC,AAAI,AAACE,AAAcJ;AAAnBG,AAAsB,AAACC,AAAcH;AAArC,AAAA,AAAAC,AAAAC,AAAAD,AAAAC,AAACJ,AAAAA,AAAAA;;;AAGR,AAAA,AAAMM;AAAN,AAAA;;AAGA,AAAA,AAAMC,AAASb;AAAf,AAKE,AAAA,AAACH,AAAML,AAAWM,AAAiBE;;AACnC,AAAA,AAAA,AAACH,AAAML,AAAWM;;AAIpB,AAAA,AAAMgB,AAAWd;AAAjB,AAEE,AAAAe,AAAMf;AAAN,AAAA,AAAAe;AAAA;AACM,AAAI,AAAA,AAACC,AAAQ,AAAA,AAAA,AAAArB,AAAaH;AACxB,AAAA,AAAA,AAACK,AAAML,AAAWM;;AAClB,AAAA,AAAA,AAACD,AAAML,AAAWM;;;;AAH1B;AAIM,AAAA,AAACD,AAAML,AAAWM,AAAe,AAAAmB,AAAA,AAACZ,AAAkB,AAAA,AAAA,AAAAV,AAAWH;;;AAJrE;AAKQ,AAAA,AAACK,AAAML,AAAWM,AAAe,AAAA,AAACO,AAAgBa,AAAM,AAAA,AAAA,AAAAvB,AAAWH;;;AAL3E;AAMM,AAACoB;;;;AACL,AAACC,AAAQb;;;;AAGb,AAAA,AAAMmB,AAAcnB,AAAOoB;AAA3B,AACE,AAAI,AAACjB,AAAEH,AAAO,AAAA,AAAA,AAAAL,AAAaH;AAA3B;;AAEE4B;;;AAGJ,AAAA,AAAMC,AAAMrB,AAAOsB;AAAnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACwC,AAACH,AAAanB,AAAOsB;AAD7D,AAEyB,AAACR,AAAUd;AAASA;;AAG7C,AAAA,AAAMuB,AAAMvB;AAAZ,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AACyB,AAACD,AAAQC;AAASA;;AAG3C,AAAA,AAAMwB;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AACyB,AAAA,AAACzB;AAD1B;;AAIA,AAAA,AAAM0B,AAAMzB,AAAOsB;AAAnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACwCA;AADxC,AAEyB,AAACvaA,AAGWjC,AAEb2B,AACAA,AACAA,AACAA,AAEAI,AACAA,AACAA,AACAJ,AAEAI,AACAA,AACAA,AACAJ,AAEAI,AACAA,AACAA,AACAJ,AAEaG,AACbC,AACAJ","names":["starter.calculator/calc-state","reagent.core.atom","starter.calculator/display","cljs.core/deref","starter.calculator/check-delete-display","cljs.core.swap_BANG_","cljs.core/assoc","starter.calculator/add-num","symbol","num","added","cljs.core._EQ_","_","starter.calculator/str-calc-a-op-b","op","a","b","G__40235","G__40236","js/parseFloat","starter.calculator/the=","starter.calculator/calc-op","starter.calculator/operation","G__40237","cljs.core.not_EQ_","cljs.core//","cljs.core/-","starter.calculator/get-op-color","default","starter.calculator/anop","color","starter.calculator/anum","starter.calculator/key0","starter.calculator/akey","starter.calculator/calc","heading"],"sourcesContent":["(ns starter.calculator\r\n  (:require\r\n   [reagent.core :as r]))\r\n\r\n\r\n(def calc-state (r/atom {:display \"0\" :del-display false :buffer \"\" :operation \"\"}))\r\n\r\n\r\n(defn display []\r\n  [:div.display (:display @calc-state)])\r\n\r\n\r\n(defn check-delete-display []\r\n  (when (:del-display @calc-state)\r\n    (swap! calc-state assoc :display \"0\")\r\n    (swap! calc-state assoc :del-display false)))\r\n\r\n\r\n(defn add-num [symbol]\r\n  (check-delete-display)\r\n  (let [num (:display @calc-state)\r\n        added (if (= \"0\" num) symbol (str num symbol))\r\n        _     (swap! calc-state assoc :display added)]))\r\n\r\n\r\n(defn str-calc-a-op-b [op a b]\r\n  (str (op (js/parseFloat a) (js/parseFloat b))))\r\n\r\n\r\n(defn the= [])\r\n\r\n\r\n(defn calc-op [symbol]\r\n  #_(let [result (str-calc-a-op-b (:operation @calc-state)\r\n                                  (:buffer @calc-state)\r\n                                  (:display @calc-state))])\r\n     ;(swap! calc-state assoc :buffer result)\r\n  (swap! calc-state assoc :operation symbol)\r\n  (swap! calc-state assoc :del-display true))\r\n     ;(swap! calc-state assoc :display result))\r\n\r\n\r\n(defn operation [symbol]\r\n  ;(swap! calc-state assoc :operation symbol)\r\n  (case symbol\r\n    \"C\" (if (not= \"\" (:operation @calc-state))\r\n          (swap! calc-state assoc :operation \"\")\r\n          (swap! calc-state assoc :display \"0\"))\r\n    \"%\" (swap! calc-state assoc :display (str-calc-a-op-b / (:display @calc-state) \"100\"))\r\n    \"+/-\" (swap! calc-state assoc :display (str-calc-a-op-b - \"0\" (:display @calc-state))) ; (str \"-\" (:display @calc-state)))\r\n    \"=\" (the=)\r\n    (calc-op symbol)))\r\n\r\n\r\n(defn get-op-color [symbol default]\r\n  (if (= symbol (:operation @calc-state))\r\n    \"black\"\r\n    default))\r\n\r\n\r\n(defn anop [symbol color]\r\n  [:div.akey {:style {:background-color (get-op-color symbol color)}\r\n              :on-click #(operation symbol)} symbol])\r\n\r\n\r\n(defn anum [symbol]\r\n  [:div.akey {:on-click #(add-num symbol)} symbol])\r\n\r\n\r\n(defn key0 []\r\n  [:div.key0 {:on-click #(add-num \"0\")} \"0\"])\r\n\r\n\r\n(defn akey [symbol color]\r\n  [:div.akey {:style {:background-color color}\r\n              :on-click #(add-num symbol)} symbol])\r\n\r\n\r\n(defn calc [heading]\r\n  [:div.text heading\r\n   [:table\r\n    [:tr\r\n     [:td {:colspan 4} [display]]]\r\n    [:tr\r\n     [:td [anop \"C\" \"lightgrey\"]]\r\n     [:td [anop \"+/-\" \"lightgrey\"]]\r\n     [:td [anop \"%\" \"lightgrey\"]]\r\n     [:td [anop \"/\" \"orange\"]]]\r\n    [:tr\r\n     [:td [akey \"7\"]]\r\n     [:td [akey \"8\"]]\r\n     [:td [akey \"9\"]]\r\n     [:td [anop \"x\"  \"orange\"]]]\r\n    [:tr\r\n     [:td [akey \"4\"]]\r\n     [:td [akey \"5\"]]\r\n     [:td [akey \"6\"]]\r\n     [:td [anop \"-\"  \"orange\"]]]\r\n    [:tr\r\n     [:td [akey \"1\"]]\r\n     [:td [akey \"2\"]]\r\n     [:td [akey \"3\"]]\r\n     [:td [anop \"+\"  \"orange\"]]]\r\n    [:tr\r\n     [:td {:colspan 2} [key0]]\r\n     [:td [akey \".\"]]\r\n     [:td [anop \"=\"  \"orange\"]]]]])\r\n"]}