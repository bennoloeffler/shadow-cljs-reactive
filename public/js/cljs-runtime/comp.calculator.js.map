{"version":3,"sources":["comp/calculator.cljs"],"mappings":"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","names":["comp.calculator/state","reagent.core.atom","comp.calculator/check-delete-display","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/assoc","comp.calculator/add-num","symbol","num","added","cljs.core._EQ_","_","comp.calculator/s%f","precision","goog.string/format","comp.calculator/adapt-size","max","str-num","len","pnt","clojure.string.index_of","comp.calculator/str-calc-a-op-b","the-op","the-a","the-b","js/console.log","a","js/parseFloat","b","G__27104","js/Error","comp.calculator/calc-op","cljs.core.not_EQ_","result","comp.calculator/the=","comp.calculator/operation","G__27105","comp.calculator/get-op-color","default","comp.calculator/display","comp.calculator/anop","color","comp.calculator/anum","comp.calculator/key0","comp.calculator/akey","comp.calculator/calc","heading"],"sourcesContent":["(ns comp.calculator\r\n  (:require\r\n   [reagent.core :as r]))\r\n\r\n\r\n(def state (r/atom {:display \"0\" \r\n                    :operation \"\" \r\n                    :del-display false \r\n                    :buffer \"\"}))\r\n\r\n\r\n(defn check-delete-display []\r\n  (when (:del-display @state)\r\n    (swap! state assoc :display \"0\")\r\n    (swap! state assoc :del-display false)))\r\n\r\n\r\n(defn add-num [symbol]\r\n  (check-delete-display)\r\n  (let [num (:display @state)\r\n        added (if (= \"0\" num) symbol (str num symbol))\r\n        _     (swap! state assoc :display added)]))\r\n\r\n\r\n(defn s%f [precision num]\r\n  (goog.string/format (str \"%.\" precision \"f\") num))\r\n\r\n\r\n(defn adapt-size [num]\r\n  (let [max 8\r\n        str-num (str num)\r\n        len (count str-num)\r\n        pnt (clojure.string/index-of str-num \".\")]\r\n    (if (> len max)\r\n      (if (nil? pnt)\r\n        \"OVERFOW\"\r\n        (if (> pnt max)\r\n          \"OVERFLOW\"\r\n          (s%f (- max pnt) num)))\r\n      str-num)))\r\n\r\n\r\n(defn str-calc-a-op-b [the-op the-a the-b]\r\n  (js/console.log \"operation: \" the-op \" \" the-a \" \" the-b)\r\n  (let [a (js/parseFloat the-a)\r\n        b (js/parseFloat the-b)]\r\n    (adapt-size \r\n     (case the-op\r\n       \"+\" (+ a b)\r\n       \"-\" (- a b)\r\n       \"x\" (* a b)\r\n       \"/\" (/ a b)))))\r\n\r\n\r\n(defn calc-op [symbol]\r\n  (when (not= \"\" (:operation @state))\r\n    (js/console.log \"in when\")\r\n    (let [result (str-calc-a-op-b (:operation @state)\r\n                                  (:buffer @state)\r\n                                  (:display @state))]\r\n      (swap! state assoc :display result)))\r\n  (swap! state assoc :operation symbol)\r\n  (swap! state assoc :del-display true)\r\n  (swap! state assoc :buffer (:display @state)))\r\n\r\n\r\n(defn the= []\r\n    (calc-op \"\"))\r\n\r\n\r\n(defn operation [symbol]\r\n  (case symbol\r\n    \"C\" (if (not= \"\" (:operation @state))\r\n          (swap! state assoc :operation \"\")\r\n          (swap! state assoc :display \"0\"))\r\n    \"%\" (swap! state assoc :display (str-calc-a-op-b \"/\" (:display @state) \"100\"))\r\n    \"+/-\" (swap! state assoc :display (str-calc-a-op-b \"-\" \"0\" (:display @state))) ; (str \"-\" (:display @state)))\r\n    \"=\" (the=)\r\n    (calc-op symbol)))\r\n\r\n\r\n;; --- COMPONENTS ---\r\n\r\n(defn get-op-color [symbol default]\r\n  (if (= symbol (:operation @state))\r\n    \"black\"\r\n    default))\r\n\r\n\r\n(defn display []\r\n  [:div.display (:display @state)])\r\n\r\n\r\n(defn anop [symbol color]\r\n  [:div.akey {:style {:background-color (get-op-color symbol color)}\r\n              :on-click #(operation symbol)} symbol])\r\n\r\n\r\n(defn anum [symbol]\r\n  [:div.akey {:on-click #(add-num symbol)} symbol])\r\n\r\n\r\n(defn key0 []\r\n  [:div.key0 {:on-click #(add-num \"0\")} \"0\"])\r\n\r\n\r\n(defn akey [symbol color]\r\n  [:div.akey {:style {:background-color color}\r\n              :on-click #(add-num symbol)} symbol])\r\n\r\n\r\n(defn calc [heading]\r\n  [:div.text heading\r\n   [:table\r\n    [:tbody\r\n     [:tr\r\n      [:td {:colSpan 4} [display]]]\r\n     [:tr\r\n      [:td [anop \"C\" \"lightgrey\"]]\r\n      [:td [anop \"+/-\" \"lightgrey\"]]\r\n      [:td [anop \"%\" \"lightgrey\"]]\r\n      [:td [anop \"/\" \"orange\"]]]\r\n     [:tr\r\n      [:td [akey \"7\"]]\r\n      [:td [akey \"8\"]]\r\n      [:td [akey \"9\"]]\r\n      [:td [anop \"x\"  \"orange\"]]]\r\n     [:tr\r\n      [:td [akey \"4\"]]\r\n      [:td [akey \"5\"]]\r\n      [:td [akey \"6\"]]\r\n      [:td [anop \"-\"  \"orange\"]]]\r\n     [:tr\r\n      [:td [akey \"1\"]]\r\n      [:td [akey \"2\"]]\r\n      [:td [akey \"3\"]]\r\n      [:td [anop \"+\"  \"orange\"]]]\r\n     [:tr\r\n      [:td {:colSpan 2} [key0]]\r\n      [:td [akey \".\"]]\r\n      [:td [anop \"=\"  \"orange\"]]]]]\r\n   [:a {:href \"https://gist.github.com/bennoloeffler/f33c61b2d8ba0dd5dc9c396a6ced8482\"} \"source\"]])\r\n"]}